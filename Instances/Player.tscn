[gd_scene load_steps=10 format=2]

[ext_resource path="res://Assets/Player/jump-0.png" type="Texture" id=1]
[ext_resource path="res://Assets/Player/idle-1.png" type="Texture" id=2]
[ext_resource path="res://Assets/Player/idle-2.png" type="Texture" id=3]
[ext_resource path="res://Assets/Player/idle-3.png" type="Texture" id=4]
[ext_resource path="res://Assets/Player/idle-0.png" type="Texture" id=5]
[ext_resource path="res://Assets/Player/land-0.png" type="Texture" id=6]

[sub_resource type="GDScript" id=3]
script/source = "extends RigidBody2D

export var HORIZONTAL_SPEED = 200
export var JUMP_SPEED = 500


func _physics_process(delta):
	var linear_velocity = get_linear_velocity()

	if Input.is_action_pressed(\"ui_left\"):
		set_linear_velocity(Vector2(-HORIZONTAL_SPEED, linear_velocity.y))
	elif Input.is_action_pressed(\"ui_right\"):
		set_linear_velocity(Vector2(HORIZONTAL_SPEED, linear_velocity.y))

	if linear_velocity.y < 0:
		$AnimatedSprite.play(\"jump\")
	else:
		$AnimatedSprite.play(\"fall\")

	var facing = 0

	if linear_velocity.x > 0:
		facing = 0.5
	elif linear_velocity.x < 0:
		facing = -0.5

	if facing != 0:
		$AnimatedSprite.scale.x = facing


func _on_Area2D_body_entered(body):
	if body.is_in_group('Paddles'):
		set_linear_velocity(Vector2(0, -JUMP_SPEED))
"

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ ExtResource( 5 ), ExtResource( 2 ), ExtResource( 3 ), ExtResource( 4 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ ExtResource( 6 ) ],
"loop": true,
"name": "fall",
"speed": 5.0
}, {
"frames": [ ExtResource( 1 ) ],
"loop": true,
"name": "jump",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 12.1467, 8.65208 )

[node name="Player" type="RigidBody2D"]
mode = 2
script = SubResource( 3 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 0, -36 )
scale = Vector2( 0.5, 0.5 )
frames = SubResource( 1 )
animation = "idle"
frame = 2
playing = true

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 0, -9 )
shape = SubResource( 2 )
[connection signal="body_entered" from="Area2D" to="." method="_on_Area2D_body_entered"]
